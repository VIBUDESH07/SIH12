pipeline {
    agent any

    environment {
        NODEJS_HOME = tool 'nodejs-23'  // Ensure NodeJS is installed in Jenkins
        PATH = "${NODEJS_HOME}/bin:${env.PATH}"
        IMAGE_NAME = "my-react-app"  // Docker image name
        CONTAINER_NAME = "react-container"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM',
                    branches: [[name: '*/main']],
                    doGenerateSubmoduleConfigurations: false,
                    extensions: [[$class: 'CloneOption', depth: 1, noTags: true]], // Shallow clone for faster builds
                    submoduleCfg: [],
                    userRemoteConfigs: [[url: 'https://github.com/VIBUDESH07/SIH12.git']]
                ])
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'npm install'
            }
        }

        stage('Build') {
            steps {
                sh 'npm run build'
            }
        }

        stage('Test') {
            steps {
               sh 'npm test -- --passWithNoTests'

            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -t ${IMAGE_NAME} .'
            }
        }

        stage('Run Docker Container') {
            steps {
                script {
                    sh '''
                    # Stop and remove the existing container if it exists
                    docker stop ${CONTAINER_NAME} || true
                    docker rm ${CONTAINER_NAME} || true

                    # Run a new container
                    docker run -d -p 3000:80 --name ${CONTAINER_NAME} ${IMAGE_NAME}
                    '''
                }
            }
        }
    }
}

